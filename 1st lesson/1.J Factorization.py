"""
Основная теорема арифметики говорит: любое число раскладывается на произведение простых множителей единственным образом, с точностью до их перестановки. Например:

Число 8 можно представить как 2 × 2 × 2.
Число 50 –— как 2 × 5 × 5 (или 5 × 5 × 2, или 5 × 2 × 5). Три варианта отличаются лишь порядком следования множителей.
Разложение числа на простые множители называется факторизацией числа.

Напишите программу, которая производит факторизацию переданного числа.

Формат ввода
В единственной строке дано число n (2 ≤ n ≤ 10^9), которое нужно факторизовать.

Формат вывода
Выведите в порядке неубывания простые множители, на которые раскладывается число n.
"""

def factorization():
    number = int(input())

    numbers = list(range(number + 1)) # список всех чисел до заданного числа
    numbers[0] = numbers[1] = False # указываем, что числа 0 и 1 не простые
    simple_numbers = [] # собираем все простые числа до заданного числа

    for n in range(2, number):
        if numbers[n]:
            for j in range(n * n, number + 1, n):
                numbers[j] = False
    for i in numbers:
        if i:
            simple_numbers.append(i)
    divisors = []
    while number > 1:
        for i in simple_numbers:
            if number % i == 0:
                divisors.append(i)
                number //= i
    return divisors


if __name__ == "__main__":
    print(factorization())
