"""
B. Комбинации

На клавиатуре старых мобильных телефонов каждой цифре соответствовало несколько букв. Примерно так:

2:'abc',
3:'def',
4:'ghi',
5:'jkl',
6:'mno',
7:'pqrs',
8:'tuv',
9:'wxyz'

Вам известно в каком порядке были нажаты кнопки телефона, без учета повторов. Напечатайте все комбинации букв, которые можно набрать такой последовательностью нажатий.
Формат ввода
На вход подается строка, состоящая из цифр 2-9 включительно. Длина строки не превосходит 10 символов.

Формат вывода
Выведите все возможные комбинации букв через пробел в лексикографическом (алфавитном) порядке по возрастанию.

"""


def combinations(sequence, count, comb=""):
    buttons = {2: 'abc', 3: 'def', 4: 'ghi', 5: 'jkl', 6: 'mno', 7: 'pqrs', 8: 'tuv', 9: 'wxyz'}
    if count == 0:
        print(comb, end=" ") # чтобы вывод был в строку
    else:
        for letters in buttons[sequence[0]]: # проходим циклом по элементам первой buttons из sequence
            combinations(sequence[1:], count - 1, comb + letters) # рекурсия вызывается для первой buttons из sequence
            # -1, count-1 чтобы не упасть в бесконечную рекурсию и comb + letters чтобы составлять комбинации


sequence = [int(i) for i in input()]
count = len(sequence)

if __name__ == "__main__":
    combinations(sequence, count, comb="")