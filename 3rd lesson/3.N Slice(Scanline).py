"""
N. Клумбы
Пример 1:
Даны 4 отрезка: [7,8],[7,8],[2,3],[6,10]
. Два одинаковых отрезка [7,8],[7,8],  сливаются в один, но потом их накрывает отрезок [6,10]
Таким образом, имеем две клумбы с координатами [2,3],[6,10]

Формат ввода
В первой строке задано количество садовников n. Число садовников не превосходит 100000. В следующих n строках
через пробел записаны координаты клумб в формате: start end, где start —– координата начала, end —– координата конца.
Оба числа целые, неотрицательные и не превосходят 10^7. start строго меньше, чем end.
Формат вывода
Нужно вывести координаты каждой из получившихся клумб в отдельных строках. Данные должны выводиться в
отсортированном порядке —– сначала клумбы с меньшими координатами, затем —– с бОльшими.

https://ru.algorithmica.org/cs/decomposition/scanline/
Метод сканирующей прямой (англ. scanline) заключается в сортировке точек на координатной прямой либо каких-то
абстрактных «событий» по какому-то признаку и последующему проходу по ним.
"""

n = int(input())
slice_list = [list(map(int, input().split(" "))) for _ in range(n)]


def merge_slice(n, slice_list):
    # if n == 1:
    #     print(slice_list[0], slice_list[1], sep=" ")
    sorted_list = sorted(slice_list)
    l = sorted_list[0][0]
    r = sorted_list[0][1]
    for i in range(1, n):
        if sorted_list[i][0] > r:
            print(l, r, sep=" ")
            l = sorted_list[i][0]
            r = sorted_list[i][1]
        elif sorted_list[i][0] <= r and sorted_list[i][1] > r:
            r = sorted_list[i][1]
    print(l, r, sep=" ")


if __name__ == "__main__":
    merge_slice(n, slice_list)
