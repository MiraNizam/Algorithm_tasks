"""
J. –¢–æ–ø–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞

–î–∞–Ω –∞—Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–π –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥—Ä–∞—Ñ (—Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—ã–π DAG, directed acyclic graph). –ù–∞–π–¥–∏—Ç–µ –µ–≥–æ —Ç–æ–ø–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é
—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É, —Ç–æ –µ—Å—Ç—å –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤–µ—Ä—à–∏–Ω—ã –≤ —Ç–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ, —á—Ç–æ –≤—Å–µ —Ä—ë–±—Ä–∞ –≥—Ä–∞—Ñ–∞ –∏–¥—É—Ç —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ. –£ –≥—Ä–∞—Ñ–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å
–Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–æ–∫ –≤–µ—Ä—à–∏–Ω. –í–∞–º –Ω–∞–¥–æ –Ω–∞–π—Ç–∏ –ª—é–±—É—é —Ç–æ–ø–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É.

–¢–æ–ø–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ ‚Äî —ç—Ç–æ –∞–ª–≥–æ—Ä–∏—Ç–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –¥–ª—è —É–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–Ω–∏—è –≤–µ—Ä—à–∏–Ω –≤ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∞—Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–º –≥—Ä–∞—Ñ–µ (
DAG) —Ç–∞–∫, —á—Ç–æ–±—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–±—Ä–∞ –æ—Ç –≤–µ—Ä—à–∏–Ω—ã ùë¢ u –∫ –≤–µ—Ä—à–∏–Ω–µ v –≤–µ—Ä—à–∏–Ω–∞ u –ø—Ä–µ–¥—à–µ—Å—Ç–≤–æ–≤–∞–ª–∞ –≤–µ—Ä—à–∏–Ω–µ v
–≤ –ø–æ—Ä—è–¥–∫–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ä–µ–±—Ä–æ u ‚Üí v, —Ç–æ u –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–æ –ø–µ—Ä–µ–¥ v.

–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
–¢–æ–ø–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–∞ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ–±–ª–∞—Å—Ç—è—Ö, —Ç–∞–∫–∏—Ö –∫–∞–∫:
–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á, –≥–¥–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–¥–∞—á–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö.
–ö–æ–º–ø–∏–ª—è—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏ –∏–ª–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏.
–£–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–Ω–∏–µ —É—á–µ–±–Ω—ã—Ö –∫—É—Ä—Å–æ–≤: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤, –≥–¥–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫—É—Ä—Å—ã —Ç—Ä–µ–±—É—é—Ç
–ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö.

–§–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞
–í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –¥–∞–Ω—ã –¥–≤–∞ —á–∏—Å–ª–∞ ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ—Ä—à–∏–Ω n (1 ‚â§ n ‚â§ 105) –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—ë–±–µ—Ä m (0 ‚â§ m ‚â§ 105). –í –∫–∞–∂–¥–æ–π –∏–∑
—Å–ª–µ–¥—É—é—â–∏—Ö m —Å—Ç—Ä–æ–∫ –æ–ø–∏—Å–∞–Ω—ã —Ä—ë–±—Ä–∞ –ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫–µ. –ö–∞–∂–¥–æ–µ —Ä–µ–±—Ä–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ –ø–∞—Ä–æ–π –≤–µ—Ä—à–∏–Ω (from, to), 1‚â§ from, to ‚â§ n,
—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –Ω–æ–º–µ—Ä–∞–º–∏ –≤–µ—Ä—à–∏–Ω –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞.

–§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞
–í—ã–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –≤–µ—Ä—à–∏–Ω –≤ —Ç—Ä–µ–±—É–µ–º–æ–º –ø–æ—Ä—è–¥–∫–µ.

"""

from collections import defaultdict


def adjacency_list(edge_list, n):
    adjacency_list = defaultdict(list)

    for u, v in edge_list:
        adjacency_list[u].append(v)

    for i in range(1, n + 1):
        if i not in adjacency_list:
            adjacency_list[i] = []
    return adjacency_list


def top_sort(color, v, adjacency_dict, stack):
    color[v] = "gray"

    for w in sorted(adjacency_dict[v]):
        if color[w] == 'white':
            top_sort(color, w, adjacency_dict, stack)
    color[v] = "black"
    stack.append(v)


def main_top_sort(n, color, adjacency_dict, stack):
    for i in adjacency_dict.keys():
        if color[i] == "white":
            top_sort(color, i, adjacency_dict, stack)


def main():
    n, m = tuple(map(int, (input().split(" ")))) # number vertex, number edge
    edge_list = [list(map(int, (input().split(" ")))) for _ in range(m)]

    adjacency_dict = adjacency_list(edge_list, n)

    stack = []
    color = ["white"] * (n + 1)

    main_top_sort(n, color, adjacency_dict, stack)

    return " ".join(map(str, reversed(stack)))


if __name__ == "__main__":
    print(main())
