"""
A. Биржа

Рита хочет попробовать поиграть на бирже. Но для начала она решила потренироваться на исторических данных.

Даны стоимости акций в каждый из n дней. В течение дня цена акции не меняется. Акции можно покупать и продавать, но
только по одной штуке в день. В один день нельзя совершать более одной операции (покупки или продажи). Также на руках не
может быть более одной акции в каждый момент времени.

Помогите Рите выяснить, какую максимальную прибыль она могла бы получить.

Пояснения к примерам

Пример 1
Рита может купить акцию во 2-й день за 1 франк.

Затем она продаст её на 3-й день за 5 франков.

В 4-й день она снова купит акцию за 3 франка.

На 5-й день Рита продаст эту акцию за 6 франков.

Прибыль составила (5 - 1) + (6 - 3) = 7 франков.

Пример 2
Рите выгодно купить акцию в самый первый день и продать в последний.

Пример 3
Рита покупает акции в дни с номерами 1, 3 и 5. Продаёт в дни 2, 4 и 6. Итоговая прибыль составит (12 - 1) + (16 - 12) +
(8 - 1) = 22. Такой же результат можно получить в виде: 22 = (16 - 1) + (8 - 1), если покупать акции в дни 1 и 5, а
продавать в дни 4 и 6.

Основная идея заключается в том, чтобы покупать акции на днях с низкой ценой и продавать их на днях с высокой ценой.
Мы проверяем каждую цену: если она меньше текущей минимальной цены обновляем её. Если цена больше минимальной цены, то
мы вычисляем прибыль и добавляем её к общей прибыли.
После каждой продажи мы обновляем минимальную цену, чтобы учесть новую точку входа для следующей покупки.
Этот алгоритм имеет временную сложность O(n)
"""

def evaluate_prices(n, prices):
    profit = 0
    buy = prices[0]
    for price in prices:
        if price < buy:
            buy = price
        elif price > buy:
            profit += price - buy
            buy = price
    return profit



def main():
    n = int(input())
    prices = list(map(int, (input().split())))
    print(evaluate_prices(n, prices))


if __name__ == "__main__":
    main()